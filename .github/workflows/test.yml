name: Test
on:
  push:
    branches:
      - master
jobs:
  macos_x64:
    name: MacOS (x64)
    runs-on: macos-11
    steps:  
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Restore Tools
        run: dotnet tool restore
      - name: Paket Restore
        run: dotnet paket restore
      - name: Build Native
        run: ./buildnative.sh
      - name: Build
        run: dotnet build src/Assembler.sln
      - name: Test
        run: dotnet test -l "console;verbosity=detailed" --no-build --nologo
      - name: Upload MacOS native libs
        uses: actions/upload-artifact@v4
        with:
          name: mac_x64
          path: libs/Native/Aardvark.Assembler/mac/AMD64/
  macos_m1:
    name: MacOS (M1)
    runs-on: macos-11
    steps:  
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Native
        run: ./buildnative.sh arm64
      - name: Upload MacOS native libs
        uses: actions/upload-artifact@v4
        with:
          name: mac_m1
          path: libs/Native/Aardvark.Assembler/mac/ARM64/
  linux:
    name: Linux (x64)
    runs-on: ubuntu-20.04
    steps:  
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Restore Tools
        run: dotnet tool restore
      - name: Paket Restore
        run: dotnet paket restore
      - name: Build Native
        run: ./buildnative.sh
      - name: Build
        run: dotnet build src/Assembler.sln
      - name: Test
        run: dotnet test -l "console;verbosity=detailed" --no-build --nologo
      - name: Upload Linux native libs
        uses: actions/upload-artifact@v4
        with:
          name: linux_x64
          path: libs/Native/Aardvark.Assembler/linux/AMD64/
  windows:
    name: Windows (x64)
    runs-on: windows-latest
    steps:  
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Restore Tools
        run: dotnet tool restore
      - name: Paket Restore
        run: dotnet paket restore
      - name: Build Native
        run: .\buildnative.cmd
      - name: Build
        run: dotnet build src\Assembler.sln
      - name: Test
        run: dotnet test -l "console;verbosity=detailed" --no-build --nologo
      - name: Upload Windows native libs
        uses: actions/upload-artifact@v4
        with:
          name: windows_x64
          path: libs/Native/Aardvark.Assembler/windows/AMD64/

  pack:
    name: Pack
    runs-on: windows-latest
    needs: 
      - linux
      - windows
      - macos_x64
      - macos_m1
    steps:
      - name: Checkout 
        uses: actions/checkout@v4
      - name: Download MacOS dependencies (x64)
        uses: actions/download-artifact@v4
        with:
          name: mac_x64
          path: libs/Native/Aardvark.Assembler/mac/AMD64/
      - name: Download MacOS dependencies (arm64)
        uses: actions/download-artifact@v4
        with:
          name: mac_m1
          path: libs/Native/Aardvark.Assembler/mac/ARM64/
      - name: Download Linux dependencies 
        uses: actions/download-artifact@v4
        with:
          name: linux_x64
          path: libs/Native/Aardvark.Assembler/linux/AMD64/
      - name: Download Windows dependencies
        uses: actions/download-artifact@v4
        with:
          name: windows_x64
          path: libs/Native/Aardvark.Assembler/windows/AMD64/
      - name: Install Dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Restore Tools
        run: dotnet tool restore
      - name: Paket Restore
        run: dotnet paket restore
      - name: Build
        run: dotnet build src\Assembler.sln
      - name: Pack
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: dotnet aardpack src\Assembler.sln --notag
      - name: Upload Packages
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: bin\pack
      - name: GitHub Packages
        env:
          NUGET_KEY: ${{ secrets.GITHUB_TOKEN }}
        shell: cmd
        run: dotnet nuget push "bin\pack\*.nupkg" -k %NUGET_KEY% -s "https://nuget.pkg.github.com/aardvark-community/index.json" --skip-duplicate
      - name: NuGet
        env:
          NUGET_KEY: ${{ secrets.NUGET_KEY }}
        shell: cmd
        run: dotnet nuget push "bin\pack\*.nupkg" -k %NUGET_KEY% -s "https://api.nuget.org/v3/index.json" --skip-duplicate
 